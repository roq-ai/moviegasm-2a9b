generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment {
  id            String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content       String
  rating        Int
  guest_user_id String?  @db.Uuid
  review_id     String?  @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user?    @relation(fields: [guest_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review        review?  @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title           String    @db.VarChar(255)
  content         String
  rating          Int
  movie_critic_id String?   @db.Uuid
  website_id      String?   @db.Uuid
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  comment         comment[]
  user            user?     @relation(fields: [movie_critic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  website         website?  @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  comment     comment[]
  review      review[]
  website     website[]
}

model website {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  review      review[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
